"""
Django settings for interstorm project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c#z%s-+3t+14^$(cv6z(bo4p)tqe!72!d3q6gjnrkk-t9u4%ue'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'interstorm_wheel',
    'site_config',
    'interstorm_vendor',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'interstorm.middleware.DefaultLanguageMiddleware',
]

ROOT_URLCONF = 'interstorm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'interstorm.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "staticfiles")


# MEDIA_URL = "/mediafile/"
# MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "mediafile")

MEDIA_URL = '/mediafile/'
MEDIA_ROOT = os.path.join(BASE_DIR,'mediafile')

X_FRAME_OPTIONS = 'ALLOWALL'

UBSSYSTEM_url = 'https://acs-external-stage.everymatrix.com/'
UBSSYSTEM_urlApi = 'http://ubs.stage.everymatrix.com/'
UBSSYSTEM_user =  'ubs_app_user_sandboxwcapi'
UBSSYSTEM_password =  'UBSAppUs3r123!456'

LANGUAGE_CODE = 'en'

LANGUAGES = (
    ('en', _('English')),
    ('ru', _('Russian')),
    ('az', _('Azeri')),
    ('de', _('German')),
    ('tr', _('Turkish')),
    ('fa', _('Farsi')),
    ('ar', _('Arabic')),
    ('es', _('Spanish'))
)

import sys
import pymysql
pymysql.install_as_MySQLdb()

DEBUG = False
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'interstorm',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': 'localhost',
        'PORT': '8889'
    }
}

ROOT_URLCONF = 'interstorm.urls_server'

UBSSYSTEM_url = 'https://acs-external.everymatrix.com/'
UBSSYSTEM_urlApi = 'https://ubs-external.everymatrix.com/'
UBSSYSTEM_user = 'ubs_app_user_shangrilalive_com'
UBSSYSTEM_password = 'RJokCde8LUPW!'

INSTALLED_APPS += (
    'redis_cache',
    # -- HTPPS-SSL --
    # "sslserver",
    # -- end --
    # -- translation --
    'translation_manager',
    'django_rq',
    'rest_framework',

)
MIDDLEWARE += (
    # 'cms.middleware.language.LanguageCookieMiddleware',
)

TRANSLATIONS_PROCESSING_METHOD = 'async_django_rq'

#=======================================
AUTHENTICATION_BACKENDS = ('django.contrib.auth.backends.ModelBackend',)
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_AGE = 1500
SESSION_COOKIE_DOMAIN = None
SESSION_COOKIE_NAME = 'DSESSIONID'
SESSION_COOKIE_SECURE = False

TESTING = sys.argv[1:2] == ['pwr']

if TESTING:
    LOCALE_PATHS = [os.path.join(BASE_DIR, '', "locale")]
    TRANSLATIONS_BASE_DIR = BASE_DIR
else:
    LOCALE_PATHS = [
        os.path.join(BASE_DIR, '', 'locale')
    ]
    TRANSLATIONS_BASE_DIR = os.path.join(BASE_DIR, '')

# print LOCALE_PATHS
# print TRANSLATIONS_BASE_DIR

TRANSLATIONS_MODE = "N"

TRANSLATIONS_PROJECT_BASE_DIR = BASE_DIR

TRANSLATIONS_ALLOW_NO_OCCURRENCES = False

TRANSLATIONS_IGNORED_PATHS = ['env']

TRANSLATIONS_MAKE_BACKUPS = True
TRANSLATIONS_CLEAN_PO_AFTER_BACKUP = False
TRANSLATIONS_QUERYSET_FORCE_FILTERS = []

TRANSLATIONS_HINT_LANGUAGE = 'en'

# e.g. 'occurrences', 'locale_parent_dir', 'domain'
TRANSLATIONS_ADMIN_EXCLUDE_FIELDS = []

TRANSLATIONS_ADMIN_FIELDS = ['original','get_hint','language','translation']

TRANSLATIONS_CUSTOM_FILTERS = (
    (r'^admin-', 'Admin fields'),
    (r'^test-', 'Test fields'),
)

CACHES = {
    'default': {
        'BACKEND': 'redis_cache.RedisCache',
        'LOCATION': 'localhost:6379',
    },
}

RQ_QUEUES = {
    'default': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
        'PASSWORD': '',
        'DEFAULT_TIMEOUT': 360,
        'USE_REDIS_CACHE': 'default',
    }
}
RQ_EXCEPTION_HANDLERS = ['path.to.my.handler']

# enable export translations from .po files in json obects via django REST Framework
TRANSLATIONS_ENABLE_API_COMMUNICATION = True

# settings below only works if TRANSLATIONS_ENABLE_API_COMMUNICATION is enabled

# absolute path to client api application source codes
# source codes must be on a same filesystem as current app
TRANSLATIONS_API_CLIENT_APP_SRC_PATH = ''

TRANSLATIONS_ENABLE_API_ANGULAR_JS = True

TRANSLATIONS_API_TRANSLATION_STRINGS_REGEX_LIST = [
    r'\{\{\s*\\[\'\"]\s*([a-z0-9\-\_]*)s*\\[\'\"]\s*\|\s*translate\s*\}\}', ]

# Dirs and files ignored for makemessages in client api app.
TRANSLATIONS_API_IGNORED_PATHS = ['front-']

TRANSLATIONS_API_RETURN_ALL = False

TRANSLATIONS_SYNC_REMOTE_URL = 'http://localhost/translations/sync/'

