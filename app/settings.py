"""
Django settings for project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
import django.conf.locale

from django.utils.translation import ugettext_lazy as _
from django.core.urlresolvers import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4m5f!yy4(t7snpr*4=g5uozhofex8q^zi3_=uteqs5b9gk_%gx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition
SITE_ID = 1

SITE_NAME = 'casino site'

INSTALLED_APPS = [
    # 'redis_cache',
    'djangocms_admin_style',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    # call campaigns
    'casino_campaigns',
    'custom_menu',
    # django-cms
    'cms',
    'menus',
    'treebeard',
    'sekizai',

    'filer',
    'easy_thumbnails',
    'mptt',
    'hvad',
    'djangocms_text_ckeditor',

    # 'cmsplugin_filer_image',
    'djangocms_column',
    'user_agents',
    'django_user_agents',
    'djangocms_link',
    'djangocms_file',
    'djangocms_picture',
    'djangocms_video',
    'djangocms_googlemap',
    'djangocms_snippet',
    'djangocms_style',
    #'storages',
    # --- end ---
    # -- HTPPS-SSL --
    # "sslserver",
    # -- end --
    # -- translation --
    # 'translation_manager',
    # 'django_rq',
    # 'rest_framework',
    'private_storage',
    # 'casino_common.casino_identification',
    # 'contract_management',
    'site_settings',
    'storages',
    'treasure_chest',
]

MIDDLEWARE = [
    'cms.middleware.utils.ApphookReloadMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',

    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    # 'cms.middleware.language.LanguageCookieMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
    'solid_i18n.middleware.SolidLocaleMiddleware',
    'check_country.middleware.IprequireMiddlewere'
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'sekizai.context_processors.sekizai',
                'cms.context_processors.cms_settings',
                'app.context_processors.app_settings',
                # 'casino_campaigns.templatetags.show_results'
            ],
            # 'libraries': {
            #     'casino_tags': 'casino_campaigns.templatetags.casino_campaigns_tags',
            # }
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

# --- Set CMS-Templates ==
CMS_TEMPLATES = (
    ('home/home.html', 'Home'),
    ('cms_templates/page.html', 'Page'),
    ('cms_templates/page_affiliate.html', 'Affiliate Page'),
    ('cms_templates/page_ukgc.html', 'UKGC Page'),
    ('sports/home.html', 'Sports Page'),
    ('live_betting/home.html', 'Live Betting Page'),
    ('casino/home.html', 'Casino Page'),
    ('live_casino/home.html', 'FAQ'),
    ('home/forgot_password.html', 'Forgot Password'),
    ('home/contact_us.html', 'Contact Us'),
    ('home/payment_method.html', 'Payment Methods')
)

CMS_PLACEHOLDER_CONF = {
    'content': {
        'name': _('Content'),
    },
    'header_policy':{
        'name' : _('Cookie & Policy Data'),
        'plugins': ['TextPlugin'],
        'default_plugins':[
            {
                'plugin_type':'TextPlugin',
                'values':{
                    'body':'<p>Add Content ...</p>'
                }
            },
        ]
    },
    'header_rule_content': {
        'name' : _('Rule content section'),
        'inherit': 'header_policy',
    },

    'footer_title_about': {
        'name' : _('Title about footer'),
        'plugins': ['TextPlugin'],
        'default_plugins':[
            {
                'plugin_type':'TextPlugin',
                'values':{
                    'body':'<p>Add title ...</p>'
                }
            },
        ]
    },
    'footer_title_about_device': {
        'name' : _('Title about device footer'),
        'inherit': 'footer_title_about',
    },
    'footer_detail_about': {
        'name' : _('Content about footer'),
        'plugins': ['TextPlugin'],
        'default_plugins':[
            {
                'plugin_type':'TextPlugin',
                'values':{
                    'body':'<p>Add content ...</p>'
                }
            },
        ]
    },
    'footer_detail_about_device': {
        'name' : _('Content about device footer'),
        'inherit': 'footer_detail_about',
    },
    'footer_top_left_title': {
        'name' : _('Title footer top left'),
        'plugins': ['TextPlugin'],
        'default_plugins':[
            {
                'plugin_type':'TextPlugin',
                'values':{
                    'body':'<p>Add title ...</p>'
                }
            },
        ]
    },
    'footer_top_right_title': {
        'name' : _('Title footer top right'),
        'inherit': 'footer_top_left_title',
    },
    'footer_bottom_left_title': {
        'name' : _('Title footer bottom left'),
        'inherit': 'footer_top_left_title',
    },
    'footer_bottom_right_title': {
        'name' : _('Title footer bottom right'),
        'inherit': 'footer_top_left_title',
    },
    'footer_top_left_content': {
        'name' : _('Content footer top left'),
        'plugins': ['TextPlugin'],
        'default_plugins':[
            {
                'plugin_type':'TextPlugin',
                'values':{
                    'body':'<p>Add content ... </p>'
                }
            },
        ]
    },
    'footer_top_right_content': {
        'name' : _('Content footer top right'),
        'inherit': 'footer_top_left_content',
    },
    'footer_bottom_left_content': {
        'name' : _('Content footer bottom left'),
        'inherit': 'footer_top_left_content',
    },
    'footer_bottom_right_content': {
        'name' : _('Content footer bottom right'),
        'inherit': 'footer_top_left_content',
    },
    'Program_content': {
        'name' : _('Content program'),
        'plugins': ['TextPlugin'],
        'default_plugins':[
            {
                'plugin_type':'TextPlugin',
                'values':{
                    'body':'<p>Add program Content ... </p>'
                }
            },
        ]
    },
    'footer_list':{
        'name' : _('Content footer list'),
        'plugins': ['TextPlugin'],
        'text_only_plugins': ['LinkPlugin'],
        'default_plugins': [
            {
                'plugin_type': 'TextPlugin',
                'values': {
                    'body': '<li class="item-sitemap-sub"> add list only...</li>',
                },
            },
        ],
        'child_classes': {
            'TextPlugin': ['LinkPlugin'],
        },
        'parent_classes': {
            'LinkPlugin': ['TextPlugin'],
        },
    },
    'footer_customer_support_list': {
        'name' : _('Content footer customer support list'),
        'inherit': 'footer_list',
    },
    'footer_for_players': {
        'name' : _('Content for players'),
        'inherit': 'footer_list',
    },
    'footer_unigame': {
        'name' : _('Content unigame'),
        'inherit': 'footer_list',
    },
    'sociallink_facecook': {
        'name' : _('Content social link facecook'),
        'plugins': ['TextPlugin'],
        'default_plugins':[
            {
                'plugin_type':'TextPlugin',
                'values':{
                    'body':'<p>Add social link ... </p>'
                }
            },
        ]
    },
    'sociallink_Twitter': {
        'name' : _('Content social link Twitter'),
        'plugins': ['TextPlugin'],
        'default_plugins':[
            {
                'plugin_type':'TextPlugin',
                'values':{
                    'body':'<p>Add social link ... </p>'
                }
            },
        ]
    },
    'sociallink_Instagram': {
        'name' : _('Content social link Instagram'),
        'plugins': ['TextPlugin'],
        'default_plugins':[
            {
                'plugin_type':'TextPlugin',
                'values':{
                    'body':'<p>Add social link ... </p>'
                }
            },
        ]
    },
}
COLUMN_WIDTH_CHOICES = (
    ('3', '25%'),
    ('4', '33%'),
    ('6', '50%'),
    ('8', '66%'),
    ('9', '75%'),
    ('12', '100%'),
)

# CKE EDITOR - WYSIWYG
# CKEDITOR_SETTINGS = {
#     'toolbar_CMS': [
#         ['PasteText', '-', 'Undo', 'Redo'],
#         ['cmsplugins'],
#         ['Bold', 'Italic', 'Underline', '-', 'Subscript', 'Superscript', '-', 'RemoveFormat'], ['Format'],
#         ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight'],
#         ['ShowBlocks'],
#     ],
#     'skin': 'moono',
#     'format_tags': 'h1;h2;h3;h4;h5;h6;p',
# }

THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters',
)

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
LOGIN_URL = reverse_lazy('admin:login')

TEXT_SAVE_IMAGE_FUNCTION = 'cmsplugin_filer_image.integrations.ckeditor.create_image_plugin'

# Every Matrix
EVERYMATRIX = {
    'url': 'api-stage.everymatrix.com/v2',
    'domain': 'http://www.aurumpalace.com',
}

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)
LOGIN_REDIRECT_URL = "/game"
# Internationalizationf
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = [
    ('en', _('English')),
    # ('ru', _('Rusia')),
    ('fi', _('Finnish')),
    ('nb', _('Norwegian')),
    # ('sv', _('Swedish')),
    ('de', _('Germany')),
    # ('zh-hans', _('Chinese')),
    # ('ko', _('Korean')),
    ('fr', _('French')),
    ('es', _('Spanish')),
    ('zh', _('Chinese')),
]

EXTRA_LANG_INFO = {
#     'en-gb': {
#         'bidi': False,
#         'code': 'en-gb',
#         'name': 'United Kingdom',
#         'name_local': u'United Kingdom',
#     },
#     'en-ca': {
#         'bidi': False,
#         'code': 'en-ca',
#         'name': 'Canadian English',
#         'name_local': u'Canadian English',
#     },
    'zh': {
        'bidi': False,
        'code': 'zh',
        'name': 'Chinese',
        'name_local': u'Chinese',
    },
}
LANG_INFO = dict()
LANG_INFO.update(django.conf.locale.LANG_INFO)
LANG_INFO.update(EXTRA_LANG_INFO.items())
django.conf.locale.LANG_INFO = LANG_INFO

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

AWS_DEFAULT_ACL = 'public-read'
AWS_ACCESS_KEY_ID = 'AKIAIFZXITS6ANQ6HF5Q'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'aurumstage'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_LOCATION = 'static'
DEFAULT_FILE_STORAGE = 'app.storage_backends.MediaStorage'
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'mysite/static'),
# ]
# STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "staticfiles")



MEDIA_URL = "/mediafile/"
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "mediafile")
# if(os.name == 'posix'):
#     MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "mediafile")
# else:
#     MEDIA_ROOT = '/var/www/aurum/mediafile'

SOLID_I18N_USE_REDIRECTS = True

SOLID_I18N_HANDLE_DEFAULT_PREFIX = True

SOLID_I18N_DEFAULT_PREFIX_REDIRECT = True

SOLID_I18N_PREFIX_STRICT = True

SESSION_COOKIE_SECURE = False


UBSSYSTEM_user =  'ubs_app_user_buckandbutler'
UBSSYSTEM_password =  '*App_user_buck321!'

PRIVATE_STORAGE_ROOT = os.path.join(os.path.dirname(BASE_DIR), "private-media")
# PRIVATE_STORAGE_ROOT = '/path/to/private-media/'
PRIVATE_STORAGE_URL = "/private-media/"
PRIVATE_STORAGE_AUTH_FUNCTION = 'private_storage.permissions.allow_authenticated'

# SESSION_ENGINE = 'django.contrib.sessions.backends.file'
